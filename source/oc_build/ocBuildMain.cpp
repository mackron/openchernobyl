// Copyright (C) 2018 David Reid. See included LICENSE file.

#include "../oc/ocEngine/ocEngine.cpp"

#define OC_BUILD_INTERMEDIATE_DIRECTORY "build/oc_build/bin/out"

#include "ocBuildUtils.hpp"
#include "ocBuildShaders.hpp"
#include "ocBuildPipelines.hpp"

#include "ocBuildUtils.cpp"
#include "ocBuildShaders.cpp"
#include "ocBuildPipelines.cpp"

int ocBuildGraphics(int argc, char** argv)
{
    ocResult result = OC_SUCCESS;

    const char* pFileHeaderText = 
        "// Copyright (C) 2018 David Reid. See included LICENSE file.\n"
        "\n"
        "// This file is auto-generated by a tool. Do not modify.\n"
        "\n";

    result = ocOpenAndWriteTextFile(OC_BUILD_INTERMEDIATE_DIRECTORY "/opengl/ocGraphics_OpenGL_Autogen.cpp", pFileHeaderText);
    if (result != OC_SUCCESS) {
        return -1;
    }

    result = ocOpenAndWriteTextFile(OC_BUILD_INTERMEDIATE_DIRECTORY "/vulkan/ocGraphics_Vulkan_Autogen.cpp", pFileHeaderText);
    if (result != OC_SUCCESS) {
        return -2;
    }


    // Compile shaders first.
    result = ocBuildCompileShaders(argc, argv);
    if (result != OC_SUCCESS) {
        return -3;
    }

    // Pipelines come after shaders since they depend on them.
    result = ocBuildCompilePipelines(argc, argv);
    if (result != OC_SUCCESS) {
        return -4;
    }

    return 0;
}

int ocBuildGraphicsPost(int argc, char** argv)
{
    ocResult result = OC_SUCCESS;

    // Copy the final generated files over to the main source tree.
    if (!dr_copy_file(OC_BUILD_INTERMEDIATE_DIRECTORY "/opengl/ocGraphics_OpenGL_Autogen.cpp", "source/oc/ocEngine/Graphics/OpenGL/ocGraphics_OpenGL_Autogen.cpp", OC_FALSE)) {
        return -5;
    }
    if (!dr_copy_file(OC_BUILD_INTERMEDIATE_DIRECTORY "/vulkan/ocGraphics_Vulkan_Autogen.cpp", "source/oc/ocEngine/Graphics/Vulkan/ocGraphics_Vulkan_Autogen.cpp", OC_FALSE)) {
        return -6;
    }

    return 0;
}

int main(int argc, char** argv)
{
    // Set the root directory from the start so that everything going forward can assume it's set correctly. The root directory
    // should be set to the root directory of the source code repository.
    const char* pRootDir = ocCmdLineGetValue(argc, argv, "--rootdir");
    if (pRootDir != NULL) {
        ocSetCurrentDirectory(pRootDir);
    }

    int result = 0;

    // Graphics.
    result = ocBuildGraphics(argc, argv);
    if (result != 0) {
        return result;
    }



    // --- POST PROCESSING ---
    //
    // At this point everything was a success. Here is where we make the final changes to the main source tree.

    // Graphics
    result = ocBuildGraphicsPost(argc, argv);
    if (result != 0) {
        return result;
    }

    return result;
}