// Copyright (C) 2018 David Reid. See included LICENSE file.

// This file is auto-generated by a tool. Do not modify.

static const char* g_ocShader_Default_VERTEX = {
    "#version 120\n"
    "\n"
    "        attribute vec3 VERT_Position;\r\n"
    "        attribute vec2 VERT_TexCoord;\r\n"
    "        attribute vec3 VERT_Normal;\r\n"
    "        varying vec2 FRAG_TexCoord;\r\n"
    "        varying vec3 FRAG_Normal;\r\n"
    "        struct UBO_Camera\r\n"
    "        {\r\n"
    "            mat4 Projection;\r\n"
    "            mat4 View;\r\n"
    "        };\r\n"
    "        uniform UBO_Camera Camera;\r\n"
    "\r\n"
    "        struct UBO_Object\r\n"
    "        {\r\n"
    "            mat4 Model;\r\n"
    "        };\r\n"
    "        uniform UBO_Object Object;\r\n"
    "\r\n"
    "void main()\r\n"
    "{\r\n"
    "    FRAG_TexCoord = VERT_TexCoord;\r\n"
    "    FRAG_Normal   = VERT_Normal;\r\n"
    "    gl_Position   = Camera.Projection * Camera.View * Object.Model * vec4(VERT_Position, 1);\r\n"
    "}\r\n"
    ""
};

static const char* g_ocShader_Default_FRAGMENT = {
    "#version 120\n"
    "\n"
    "        varying vec2 FRAG_TexCoord;\r\n"
    "        varying vec3 FRAG_Normal;\r\n"
    "        vec4 OUT_Color;\r\n"
    "\r\n"
    "\r\n"
    "        uniform sampler2D Texture0;\r\n"
    "\r\n"
    "\r\n"
    "\r\n"
    "        vec4 texture(sampler1D s, float coord, float bias) { return texture1D(s, coord, bias); }\r\n"
    "        vec4 texture(sampler2D s, vec2 coord,  float bias) { return texture2D(s, coord, bias); }\r\n"
    "        vec4 texture(sampler3D s, vec3 coord,  float bias) { return texture3D(s, coord, bias); }\r\n"
    "\r\n"
    "void main()\r\n"
    "{\r\n"
    "    OUT_Color = texture(Texture0, FRAG_TexCoord, 0.0f);\r\n"
    "\r\n"
    "\r\n"
    "    gl_FragColor = OUT_Color;\r\n"
    "\r\n"
    "}\r\n"
    ""
};

